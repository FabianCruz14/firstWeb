/* para asignar un custom propieties debemos comenzarlo con doble guion,
seguido de la etiqueta, dos puntos (:), despues el valor del color y
cerramos con ; */

:root {
   --primario: #26346c;
   --secundario: #5480b0;
   --blanco: #edf2fc;
   --terceario: #488ed4;
   --gris: #a3b3c4;
   --grisTop: #ededed;
}

/* para asignar un tamaño a nuestros textos usamos el sig codigo
que nos ayuda a asignarlo como si fueran pixeles con la diferencia
que los tamaños se adaptarán mejor a cualquier tipo de pantalla */

html {
   font-size: 62.5%;
   /* apply a natural box layout model to all elements, but allowing components to change */
   box-sizing: border-box;
   scroll-snap-type: x mandatory;
}

*,
*:before,
*:after {
   box-sizing: inherit;
}

/* scroll snap */
.servicios,
.navegacion-principal {
   scroll-snap-align: center;
   scroll-snap-stop: always;
}

body {
   /* lo que se asigne en este codigo, funcionará para todo el sitio */
   /* con esto, conseguimos que 1rem = 10px */
   font-size: 16px;

   font-family: 'Josefin Sans', sans-serif;
   background-image: linear-gradient(to top, var(--blanco) 0%, var(--grisTop)100%);

}

/* design system: con esto, le asignamos un tamaño especifico y general para todo
el proyecto en forma general.
tambien aplica para centrarlos, moverlos o colocarlos donde deseemos */
h1,
.title-sh h1 {
   font-size: 3.8rem;
   text-transform: capitalize;
}

h2 {
   font-size: 3rem;
}

h3 {
   font-size: 1.8rem;
}


h1,
h2,
h3 {
   text-align: center;
}

.title span {
   text-transform: lowercase;
   font-size: 1.7rem;
}

.contenedor {
   width: 70%;
   margin: 0 auto;
   padding: 2rem;
   border-radius: 2rem;
}

/* creamos la clase boton y la usamos para diseñarlo */
.boton {
   background-color: var(--secundario);
   color: var(--blanco);
   padding: 1rem 3rem;
   margin-top: 2rem;

   /* usamos la sig linea para quitar las decoraciones al link */
   text-decoration: none;

   /* transformamos el contenido de boton a mayusculas con uper */
   text-transform: uppercase;
   font-size: 2rem;

   /* redondeamos las esquinas del boton */
   border-radius: .5rem;

   /* width: 80%; */
   text-align: center;
   border: none;
   width: 90%;
}

@media (min-width: 768px) {
   .boton {
      width: auto;
   }

}

.boton:hover {
   cursor: pointer;
}

.sombra {
   -webkit-box-shadow: 3px 8px 17px -1px rgba(84, 129, 176, 0.67);
   -moz-box-shadow: 3px 8px 17px -1px rgba(84, 129, 176, 0.67);
   box-shadow: 3px 8px 17px -1px rgba(84, 129, 176, 0.67);
   border-radius: 0px 0px 25px 25px;
   -moz-border-radius: 0px 0px 25px 25px;
   -webkit-border-radius: 0px 0px 25px 25px;
   border: 0px solid #000000;
   border-radius: .5rem;
}

/* utilidades */
.width-100 {
   width: 100%;
}

@media (min-width: 768px) {
   .width-100 {
      width: auto;
   }

}

.flex {
   display: flex;
}

.align-r {
   justify-content: left;
}

.nav-bg {
   /* le asignamos un color a todo el fondo de la barra de navegacion */
   background-color: var(--primario);
}

/* nav */

.navegacion-principal {
   /* agregamos un padding, que es la distacia que hay entre el
   elemento mas cercano y nosotros, pero por dentro */
   display: flex;
   flex-direction: column;
   justify-content: space-evenly;
   align-items: center;
}

@media (min-width: 768px) {
   .navegacion-principal {
      flex-direction: row;
   }

}

/* acá usamos un selector especifico */
.navegacion-principal a {
   /* le damos color a las letras del enlace */
   color: var(--blanco);
   /* aca le modificamos la linea a los enlaces, en este caso no tendra nada */
   text-decoration: none;
   font-size: 2rem;
   font-weight: 79rem;
   padding: 1rem;
}

.navegacion-principal a:hover {
   background-color: var(--secundario);
   color: var(--blanco);
}

.hero {
   background-image: url(/img/hero.jpg);
   background-repeat: no-repeat;
   background-size: cover;
   background-position: center;
   height: 450px;
   position: relative;
}


.contenido-hero {
   position: absolute;
   /* background-color: rgba(0, 0, 0, 0.1); */
   width: 100%;
   height: 100%;

   /* con el sigueinte codigo, puedes alinear verticalmente y horizontalmente cualquier
   elemento dentro de css */
   display: flex;
   flex-direction: column;
   align-items: center;
   justify-content: center;

}

.contenido-hero h2,
.contenido-hero p {
   color: var(--oscuro);
   text-shadow: 2px 2px 2px var(--blanco);
   text-align: center;
   align-items: center;
}



.ubicacion {
   display: flex;
   justify-content: center;
   align-items: center;
}

/* my service´s */
@media (min-width: 768px) {
   .servicios {
      /* para usar grid, primero lo declaramos, posteriormente le asignamos el tanto de columnas por hacer, asi como
      tambien le asignamos el porcentaje de cada cuadro por asignarle, todo esto dentro del padre de los servicios */
      display: grid;
      /* para agregarle filas, usamos la funcion grid-template-rows:  */
      grid-template-columns: 1fr 1fr 1fr;
      /* agregamos espacio entre cada espacio designado con el grid, lo hacemos con column-gap: ; */
      column-gap: 1rem;
   }
}

.servicio {
   display: flex;
   flex-direction: column;
   justify-content: flex-start;
   align-items: center;

}

.servicio h3 {
   color: var(--secundario);
   font-weight: normal;

}

.servicio p {
   line-height: 1.6;
   text-align: center;
}

ul {
   text-align: center;
   justify-content: center;
}

li {
   line-height: 1.6;
}


.servicio .iconos {
   height: 12rem;
   width: 12rem;

   background-color: var(--primario);
   border-radius: 50%;

   display: flex;
   justify-content: center;
   align-items: center;
}

/* contac me */

.formulario {
   background-color: var(--gris);
   width: min(60rem, 100%);
   margin: 0 auto;
   padding: 2rem;
   border-radius: 1rem;
}


.formulario fieldset {
   border: none;
}

.formulario legend {
   text-align: center;
   font-size: 1.8rem;
   text-transform: uppercase;
   font-weight: 700;
   margin-bottom: 1rem;
   color: var(--primario)
}

@media (min-width: 768px) {
   .contenedor-campos {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: auto auto 20rem;
      column-gap: 1rem;
   }

   .campo:nth-child(3),
   .campo:nth-child(4) {
      grid-column: 1/3;
   }
}

.campo {
   margin-bottom: 1rem;
}

.campo label {
   color: var(--blanco);
   font-weight: bold;
   margin-bottom: .5rem;
   display: block;

}

.campo textarea {
   height: 17rem;
   margin-bottom: 1rem;
}

.input-text {
   width: 100%;
   border: none;
   padding: 1.5rem;
   border-radius: .5rem;
}

/* footer */
.footer {
   text-align: center;
}


/* superheroe style.css */
.container {
   max-width: 800px;
}

.card {
   border: none;
   box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
}

.card-title {
   font-size: 1.25rem;
   margin-bottom: 0.5rem;
}

.card-text {
   font-size: 0.875rem;
   color: #6c757d;
}

.title-sh h1 {
   margin: .67em 0;
}

.titulo h2 {
   text-align: start;
   text-transform: capitalize;
}

.titulo .boton {
   font-size: .7em;
   margin-top: .67rem;
}

.sh-content {
   display: grid;
   grid-template-columns: 2fr 3fr;
   -webkit-column-gap: 4rem;
   -moz-column-gap: 4rem;
   column-gap: 4rem;
   margin-right: 2rem;
   margin-top: 1em;
}

.sh-content-thumbnail {
   width: 100%;
   border-radius: 6px;
   overflow: hidden;
   margin-top: 0em;
}

.sh-list .name {
   text-transform: uppercase;
   letter-spacing: 2px;
   font-size: 3.5rem;
   font-weight: 500;
   margin-top: -1.2rem;
}

.powerstats {
   display: none;
}

.powerstats li {
   display: -webkit-box;
   display: -ms-flexbox;
   display: flex;
   -webkit-box-pack: justify;
   -ms-flex-pack: justify;
   justify-content: space-between;
   margin: 1.2rem auto;
   padding: 1.2rem;
   -webkit-box-shadow: 0 5px 7px 0 rgba(0, 0, 0, 0.5);
   box-shadow: 0 5px 7px 0 rgba(0, 0, 0, 0.5);
}

.powerstats li div i {
   color: var(--primario);
}