/* para asignar un custom propieties debemos comenzarlo con doble guion,
seguido de la etiqueta, dos puntos (:), despues el valor del color y
cerramos con ; */

:root{
   --primario:#26346c;
   --secundario:#5480b0;
   --blanco: #edf2fc ;
   --terceario: #488ed4;
   --gris: #a3b3c4;
   --grisTop: #ededed;
}

/* para asignar un tamaño a nuestros textos usamos el sig codigo
que nos ayuda a asignarlo como si fueran pixeles con la diferencia
que los tamaños se adaptarán mejor a cualquier tipo de pantalla */

html{
   font-size: 62.5%;
    /* apply a natural box layout model to all elements, but allowing components to change */
   box-sizing: border-box;
 }
 *, *:before, *:after {
   box-sizing: inherit;
 }
body{
   /* lo que se asigne en este codigo, funcionará para todo el sitio */
   /* con esto, conseguimos que 1rem = 10px */ 
   font-size: 16px;

   font-family: 'Josefin Sans', sans-serif;
   background-image: linear-gradient(to top, var(--blanco) 0%, var(--grisTop)100%);

}

/* design system: con esto, le asignamos un tamaño especifico y general para todo
el proyecto en forma general.
tambien aplica para centrarlos, moverlos o colocarlos donde deseemos */
h1{
   font-size: 3.8rem;
   text-transform: capitalize;
}
h2{
   font-size: 3rem;
}
h3{
   font-size: 1.8rem;
}
h1,h2,h3{
   text-align: center;
}

.title span{
   text-transform: lowercase;
    font-size: 1.7rem; 
}

.contenedor{
   max-width: 120rem;
   margin: 0 auto;
}

/* creamos la clase boton y la usamos para diseñarlo */
.boton{
   background-color: var(--secundario);
   color: var(--blanco);
   padding: 1rem 3rem;
   margin: 1rem;
   
   /* usamos la sig linea para quitar las decoraciones al link */
   text-decoration: none;
   
   /* transformamos el contenido de boton a mayusculas con uper */
   text-transform: uppercase;
   font-size: 2rem;

   /* redondeamos las esquinas del boton */
   border-radius: .5rem;

   width: 80%;
   text-align: center;
   align-items: center;
}

@media (min-width: 768px) { 
    .boton {
      width: auto;
    }
   
}

.nav-bg{ 
   /* le asignamos un color a todo el fondo de la barra de navegacion */
   background-color: var(--primario);
}

.navegacion-principal{
   /* agregamos un padding, que es la distacia que hay entre el 
   elemento mas cercano y nosotros, pero por dentro */
   display: flex;
   flex-direction: column;
   justify-content: space-evenly;
   align-items: center;
}
@media (min-width: 768px) { 
   .navegacion-principal{
      flex-direction: row;}
      
}
/* acá usamos un selector especifico */
.navegacion-principal a{
   /* le damos color a las letras del enlace */
   color: var(--blanco);
   /* aca le modificamos la linea a los enlaces, en este caso no tendra nada */
   text-decoration: none;
   font-size: 2rem;
   font-weight: 79rem;
   padding: 1rem;
}

.navegacion-principal a:hover {
   background-color: var(--secundario);
   color: var(--blanco);
}

.hero{
   background-image: url(/img/hero.jpg);
   background-repeat: no-repeat;
   background-size: cover;
   background-position: center;
   height: 450px;
   position: relative;
}


.contenido-hero {
   position: absolute;
   /* background-color: rgba(0, 0, 0, 0.1); */
   width: 100%;
   height: 100%;
 
   /* con el sigueinte codigo, puedes alinear verticalmente y horizontalmente cualquier
   elemento dentro de css */
   display: flex;
   flex-direction: column;
   align-items: center;
   justify-content: center;

}
.contenido-hero h2,
.contenido-hero p{
   color: var(--oscuro);
   text-shadow: 2px 2px 2px var(--blanco);
   text-align: center;
   align-items: center;
}



.ubicacion{
      display: flex;
      justify-content: center;
      align-items: center;   
}
